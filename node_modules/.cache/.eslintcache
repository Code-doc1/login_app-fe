[{"D:\\login_app\\client\\src\\index.js":"1","D:\\login_app\\client\\src\\App.js":"2","D:\\login_app\\client\\src\\components\\Reset.js":"3","D:\\login_app\\client\\src\\components\\Username.js":"4","D:\\login_app\\client\\src\\components\\Password.js":"5","D:\\login_app\\client\\src\\components\\Recovery.js":"6","D:\\login_app\\client\\src\\components\\Register.js":"7","D:\\login_app\\client\\src\\components\\PageNotFound.js":"8","D:\\login_app\\client\\src\\components\\Profile.js":"9","D:\\login_app\\client\\src\\helpers\\validate.js":"10","D:\\login_app\\client\\src\\helpers\\convert.js":"11","D:\\login_app\\client\\src\\store\\store.js":"12","D:\\login_app\\client\\src\\helpers\\helper.js":"13"},{"size":243,"mtime":1690450715619,"results":"14","hashOfConfig":"15"},{"size":1192,"mtime":1690455748599,"results":"16","hashOfConfig":"15"},{"size":2043,"mtime":1690573619100,"results":"17","hashOfConfig":"15"},{"size":2657,"mtime":1690813065106,"results":"18","hashOfConfig":"15"},{"size":2288,"mtime":1690571176532,"results":"19","hashOfConfig":"15"},{"size":2350,"mtime":1690571980312,"results":"20","hashOfConfig":"15"},{"size":3208,"mtime":1690829208923,"results":"21","hashOfConfig":"15"},{"size":156,"mtime":1690455804827,"results":"22","hashOfConfig":"15"},{"size":3795,"mtime":1690579031188,"results":"23","hashOfConfig":"15"},{"size":2650,"mtime":1690812167948,"results":"24","hashOfConfig":"15"},{"size":365,"mtime":1690576569652,"results":"25","hashOfConfig":"15"},{"size":246,"mtime":1690809886520,"results":"26","hashOfConfig":"15"},{"size":2975,"mtime":1690833917616,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"efti1e",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\login_app\\client\\src\\index.js",[],[],[],"D:\\login_app\\client\\src\\App.js",[],[],"D:\\login_app\\client\\src\\components\\Reset.js",["73","74"],[],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport avatar from '../assets/profile.png'\r\nimport { Toaster } from 'react-hot-toast'\r\nimport { useFormik } from 'formik'\r\nimport { resetPasswordValidate } from '../helpers/validate'\r\n\r\nimport styles from '../styles/Username.module.css';\r\n\r\nexport default function Reset() {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n            confirm_pwd: '',\r\n        },\r\n        validate: resetPasswordValidate,\r\n        validateOnBlur: false,\r\n        validateOnChange: false,\r\n        onSubmit: async values => {\r\n            console.log(values);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className='container mx-auto'>\r\n            <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n            <div className='flex justify-center items-center h-screen'>\r\n                <div className={styles.glass} style={{ width: \"50%\" }}>\r\n                    <div className='title flex flex-col items-center'>\r\n                        <h4 className='text-5xl font-bold'> Reset </h4>\r\n                        <span className='py-4 text-xl w-2/3 text-center text-gray-5'>\r\n                            Enter new password\r\n                        </span>\r\n                    </div>\r\n\r\n                    <form className='pt-20' onSubmit={formik.handleSubmit}>\r\n\r\n                        <div className='textbox flex flex-col items-center gap-6'>\r\n                            <input {...formik.getFieldProps('password')} className={styles.textbox} type='password' placeholder='New Password' />\r\n                            <input {...formik.getFieldProps('confirm_pwd')} className={styles.textbox} type='password' placeholder='Repeat Password' />\r\n                            <button className='bg-blue-500 hover:bg-red-500 text-white font-bold py-2 px-4 rounded' type='submit'>Reset</button>\r\n                        </div>\r\n\r\n\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\login_app\\client\\src\\components\\Username.js",["75","76"],[],"import React, { useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport avatar from '../assets/profile.png'\r\nimport { Toaster } from 'react-hot-toast'\r\nimport { useFormik } from 'formik'\r\nimport { usernameValidate } from '../helpers/validate'\r\nimport { useAuthStore } from '../store/store'\r\n\r\nimport styles from '../styles/Username.module.css';\r\n\r\nexport default function Username() {\r\n\r\n    const navigate = useNavigate();\r\n    const setUsername = useAuthStore(state => state.setUsername)\r\n    // const username = useAuthStore(state => state.auth.username)\r\n\r\n    // useEffect(() => {\r\n    //     console.log(username)\r\n    // })\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: 'zargham1234'\r\n        },\r\n        validate: usernameValidate,\r\n        validateOnBlur: false,\r\n        validateOnChange: false,\r\n        onSubmit: async values => {\r\n            setUsername(values.username);\r\n            console.log(values);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className='container mx-auto'>\r\n            <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n            <div className='flex justify-center items-center h-screen'>\r\n                <div className={styles.glass}>\r\n                    <div className='title flex flex-col items-center'>\r\n                        <h4 className='text-5xl font-bold'> Hello again</h4>\r\n                        <span className='py-4 text-xl w-2/3 text-center text-gray-5'>\r\n                            Explore more by connecting with us...\r\n                        </span>\r\n                    </div>\r\n\r\n                    <form className='py-1' onSubmit={formik.handleSubmit}>\r\n                        <div className='profile flex justify-center py-4'>\r\n                            <img src={avatar} className={styles.profile_img} alt='avatar' />\r\n                        </div>\r\n                        <div className='textbox flex flex-col items-center gap-6'>\r\n                            <input {...formik.getFieldProps('username')} className={styles.textbox} type='text' placeholder='Username' />\r\n                            <button className='bg-blue-500 hover:bg-red-500 text-white font-bold py-2 px-4 rounded' type='submit'>Let's Go</button>\r\n                        </div>\r\n\r\n                        <div className='text-center py-4'>\r\n                            <span className='text-gray-500'>Not a member <Link className='text-red-500' to='/register'>Register Now</Link></span>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\login_app\\client\\src\\components\\Password.js",[],[],"D:\\login_app\\client\\src\\components\\Recovery.js",["77","78"],[],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport avatar from '../assets/profile.png'\r\nimport { Toaster } from 'react-hot-toast'\r\nimport { useFormik } from 'formik'\r\nimport { passwordValidate } from '../helpers/validate'\r\n\r\nimport styles from '../styles/Username.module.css';\r\n\r\nexport default function Recovery() {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: ''\r\n        },\r\n        validate: passwordValidate,\r\n        validateOnBlur: false,\r\n        validateOnChange: false,\r\n        onSubmit: async values => {\r\n            console.log(values);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className='container mx-auto'>\r\n            <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n            <div className='flex justify-center items-center h-screen'>\r\n                <div className={styles.glass}>\r\n                    <div className='title flex flex-col items-center'>\r\n                        <h4 className='text-5xl font-bold'> Recover Now</h4>\r\n                        <span className='py-4 text-xl w-2/3 text-center text-gray-5'>\r\n                            Recover your password by entering OTP\r\n                        </span>\r\n                    </div>\r\n\r\n                    <form className='pt-20' onSubmit={formik.handleSubmit}>\r\n\r\n                        <div className='textbox flex flex-col items-center gap-6'>\r\n                            <div className='input text-center'>\r\n                                <span className='py-4 text-sm text-left text-gray-500'>\r\n                                    Enter 6 digit OTP sent to your email address\r\n                                </span>\r\n                                <input className={styles.textbox} type='text' placeholder='OTP' />\r\n\r\n                            </div>\r\n\r\n                            <button className='bg-blue-500 hover:bg-red-500 text-white font-bold py-2 px-4 rounded' type='submit'>Recover</button>\r\n                        </div>\r\n\r\n                        <div className='text-center py-4'>\r\n                            <span className='text-gray-500'>Can't Get OTP <button className='text-red-500' >Recover Now</button></span>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\login_app\\client\\src\\components\\Register.js",[],[],"D:\\login_app\\client\\src\\components\\PageNotFound.js",[],[],"D:\\login_app\\client\\src\\components\\Profile.js",["79"],[],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport avatar from '../assets/profile.png';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { useFormik } from 'formik';\r\nimport { profileValidation } from '../helpers/validate';\r\nimport convertToBase64 from '../helpers/convert';\r\n\r\nimport styles from '../styles/Username.module.css';\r\nimport extend from '../styles/Profile.module.css';\r\n\r\nexport default function Profile() {\r\n\r\n    const [file, setFile] = useState();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            mobile: '',\r\n            address: ''\r\n        },\r\n        validate: profileValidation,\r\n        validateOnBlur: false,\r\n        validateOnChange: false,\r\n        onSubmit: async values => {\r\n            values = await Object.assign(values, { profile: file || '' });\r\n            console.log(values);\r\n        }\r\n    })\r\n\r\n\r\n    /**file uploading handler */\r\n    const onUpload = async event => {\r\n        const base64 = await convertToBase64(event.target.files[0]);\r\n        setFile(base64);\r\n    }\r\n\r\n    return (\r\n        <div className='container mx-auto'>\r\n            <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n            <div className='flex justify-center items-center h-screen'>\r\n                <div className={styles.glass} style={{ width: \"45%\" }}>\r\n                    <div className='title flex flex-col items-center'>\r\n                        <h4 className='text-5xl font-bold'> Profile</h4>\r\n                        <span className='py-4 text-xl w-2/3 text-center text-gray-5'>\r\n                            You can update your profile.\r\n                        </span>\r\n                    </div>\r\n\r\n                    <form className='py-1' onSubmit={formik.handleSubmit}>\r\n                        <div className='profile flex justify-center py-4'>\r\n                            <label htmlFor=\"profile\">\r\n                                <img src={file || avatar} className={styles.profile_img} alt='avatar' />\r\n                            </label>\r\n\r\n                            <input onChange={onUpload} type='file' id='profile' />\r\n\r\n                        </div>\r\n                        <div className='textbox flex flex-col items-center gap-6'>\r\n                            <div className='name flex w-3/4 gap-10'>\r\n                                <input {...formik.getFieldProps('firstName')} className={styles.textbox} type='text' placeholder='FirstName' />\r\n                                <input {...formik.getFieldProps('lastName')} className={styles.textbox} type='text' placeholder='LastName' />\r\n                            </div>\r\n\r\n                            <div className='name flex w-3/4 gap-10'>\r\n                                <input {...formik.getFieldProps('mobile')} className={styles.textbox} type='text' placeholder='Mobile N0.' />\r\n                                <input {...formik.getFieldProps('email')} className={styles.textbox} type='text' placeholder='Email*' />\r\n                            </div>\r\n\r\n\r\n                            <input {...formik.getFieldProps('address')} className={styles.textbox} type='text' placeholder='Address' />\r\n                            <button className='bg-blue-500 hover:bg-red-500 text-white font-bold py-2 px-4 rounded' type='submit'>Register</button>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className='text-center py-4'>\r\n                            <span className='text-gray-500'>Come back later <Link className='text-red-500' to='/'>Logout</Link></span>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\login_app\\client\\src\\helpers\\validate.js",["80","81"],[],"import { toast } from \"react-hot-toast\";\r\nimport { authentication } from './helper';\r\n/**username validation */\r\nexport function usernameValidate(values) {\r\n    const errors = usernameVerify({}, values)\r\n    if (values.username) {\r\n        const { status } = authentication(values.username);\r\n        if (status !== 200) {\r\n            errors.exists = toast.error('User does not exist...!')\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}\r\n/**password validation */\r\nexport function passwordValidate(values) {\r\n    const errors = passwordVerify({}, values)\r\n\r\n    return errors;\r\n}\r\n\r\n/**reset password validation */\r\nexport function resetPasswordValidate(values) {\r\n    const errors = passwordVerify({}, values)\r\n\r\n    if (values.password !== values.confirm_pwd) {\r\n        errors.exists = toast.error(\"Password does not match\")\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n/**register form validation */\r\nexport async function registerValidation(values) {\r\n    const errors = usernameVerify({}, values);\r\n    passwordVerify(errors, values);\r\n    emailVerify(errors, values);\r\n\r\n    return errors;\r\n}\r\n\r\n\r\n/**password validation function */\r\nfunction passwordVerify(error = {}, values) {\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if (!values.password) {\r\n        error.username = toast.error(\"password required...!\")\r\n    } else if (values.password.includes(\" \")) {\r\n        error.username = toast.error(\"Invalid password...!\")\r\n    } else if (values.password.length < 6) {\r\n        error.username = toast.error(\"Password should be more then 6 characters long...!\")\r\n    } else if (!specialChars.test(values.password)) {\r\n        error.username = toast.error(\"Password must have special characters...!\")\r\n    }\r\n    return error;\r\n}\r\n\r\n/**username validation function */\r\nfunction usernameVerify(error = {}, values) {\r\n    if (!values.username) {\r\n        error.username = toast.error(\"Username required...!\")\r\n    } else if (values.username.includes(\" \")) {\r\n        error.username = toast.error(\"Invalid username...!\")\r\n    }\r\n    return error;\r\n}\r\n\r\n/** validate email */\r\nfunction emailVerify(error = {}, values) {\r\n    if (!values.email) {\r\n        error.email = toast.error(\"Email Required...!\");\r\n    } else if (values.email.includes(\" \")) {\r\n        error.email = toast.error(\"Wrong Email...!\")\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        error.email = toast.error(\"Invalid email address...!\")\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\n/**validate profile page */\r\nexport async function profileValidation(values) {\r\n    const errors = emailVerify({}, values);\r\n    return errors;\r\n}","D:\\login_app\\client\\src\\helpers\\convert.js",[],[],"D:\\login_app\\client\\src\\store\\store.js",[],[],"D:\\login_app\\client\\src\\helpers\\helper.js",[],[],{"ruleId":"82","severity":1,"message":"83","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"88","line":13,"column":11,"nodeType":"84","messageId":"85","endLine":13,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":14},{"ruleId":"82","severity":1,"message":"89","line":10,"column":8,"nodeType":"84","messageId":"85","endLine":10,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":45,"column":44,"nodeType":"92","messageId":"93","endLine":45,"endColumn":45,"suggestions":"94"},{"ruleId":"90","severity":1,"message":"95","line":45,"column":61,"nodeType":"92","messageId":"93","endLine":45,"endColumn":62,"suggestions":"96"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'avatar' is defined but never used.","'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","'extend' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["97","98"],"Unnecessary escape character: \\/.",["99","100"],{"messageId":"101","fix":"102","desc":"103"},{"messageId":"104","fix":"105","desc":"106"},{"messageId":"101","fix":"107","desc":"103"},{"messageId":"104","fix":"108","desc":"106"},"removeEscape",{"range":"109","text":"110"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"111","text":"112"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"113","text":"110"},{"range":"114","text":"112"},[1218,1219],"",[1218,1218],"\\",[1235,1236],[1235,1235]]