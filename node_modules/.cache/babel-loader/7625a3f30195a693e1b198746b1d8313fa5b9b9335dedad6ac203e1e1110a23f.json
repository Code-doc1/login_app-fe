{"ast":null,"code":"import { toast } from \"react-hot-toast\";\n\n/**username validation */\nexport function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n/**password validation */\nexport function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/**reset password validation */\n\nexport function resetPasswordValidate(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exists = toast.error(\"Password does not match\");\n  }\n  return errors;\n}\n\n/**register form validation */\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\n\n/**password validation function */\nfunction passwordVerify(error = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    error.username = toast.error(\"password required...!\");\n  } else if (values.password.includes(\" \")) {\n    error.username = toast.error(\"Invalid password...!\");\n  } else if (values.password.length < 6) {\n    error.username = toast.error(\"Password should be more then 6 characters long...!\");\n  } else if (!specialChars.test(values.password)) {\n    error.username = toast.error(\"Password must have special characters...!\");\n  }\n  return error;\n}\n\n/**username validation function */\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username required...!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid username...!\");\n  }\n  return error;\n}\n\n/** validate email */\nfunction emailVerify(error = {}, values) {\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","resetPasswordValidate","password","confirm_pwd","exists","error","registerValidation","emailVerify","specialChars","username","includes","length","test","email"],"sources":["D:/login_app/client/src/helpers/validate.js"],"sourcesContent":["import { toast } from \"react-hot-toast\";\r\n\r\n/**username validation */\r\nexport function usernameValidate(values) {\r\n    const errors = usernameVerify({}, values)\r\n\r\n    return errors;\r\n}\r\n/**password validation */\r\nexport function passwordValidate(values) {\r\n    const errors = passwordVerify({}, values)\r\n\r\n    return errors;\r\n}\r\n\r\n/**reset password validation */\r\n\r\nexport function resetPasswordValidate(values) {\r\n    const errors = passwordVerify({}, values)\r\n\r\n    if (values.password !== values.confirm_pwd) {\r\n        errors.exists = toast.error(\"Password does not match\")\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n/**register form validation */\r\nexport async function registerValidation(values) {\r\n    const errors = usernameVerify({}, values);\r\n    passwordVerify(errors, values);\r\n    emailVerify(errors, values);\r\n\r\n    return errors;\r\n}\r\n\r\n\r\n/**password validation function */\r\nfunction passwordVerify(error = {}, values) {\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if (!values.password) {\r\n        error.username = toast.error(\"password required...!\")\r\n    } else if (values.password.includes(\" \")) {\r\n        error.username = toast.error(\"Invalid password...!\")\r\n    } else if (values.password.length < 6) {\r\n        error.username = toast.error(\"Password should be more then 6 characters long...!\")\r\n    } else if (!specialChars.test(values.password)) {\r\n        error.username = toast.error(\"Password must have special characters...!\")\r\n    }\r\n    return error;\r\n}\r\n\r\n/**username validation function */\r\nfunction usernameVerify(error = {}, values) {\r\n    if (!values.username) {\r\n        error.username = toast.error(\"Username required...!\")\r\n    } else if (values.username.includes(\" \")) {\r\n        error.username = toast.error(\"Invalid username...!\")\r\n    }\r\n    return error;\r\n}\r\n\r\n/** validate email */\r\nfunction emailVerify(error = {}, values) {\r\n    if (!values.email) {\r\n        error.email = toast.error(\"Email Required...!\");\r\n    } else if (values.email.includes(\" \")) {\r\n        error.email = toast.error(\"Wrong Email...!\")\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        error.email = toast.error(\"Invalid email address...!\")\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}