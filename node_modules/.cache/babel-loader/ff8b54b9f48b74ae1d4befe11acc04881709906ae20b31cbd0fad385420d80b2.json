{"ast":null,"code":"import { toast } from \"react-hot-toast\";\nexport function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n/**password validation function */\nfunction passwordVerify(error = {}, values) {\n  const specialCharacter = '~!@#$%^&*()_+{}:\"<>?`/\\|';\n  if (!values.password) {\n    error.username = toast.error(\"password required...!\");\n  } else if (values.password.includes(\" \")) {\n    error.username = toast.error(\"Invalid username...!\");\n  } else if (values.password.length < 6) {\n    error.username = toast.error(\"Password should be more then 6 characters long...!\");\n  } else if (specialCharacter.test(values.password)) {\n    error.username = toast.error(\"Password must have special characters...!\");\n  }\n  return error;\n}\n\n/**username validation function */\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username required...!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid username...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordVerify","error","specialCharacter","password","username","includes","length","test"],"sources":["D:/login_app/client/src/helpers/validate.js"],"sourcesContent":["import { toast } from \"react-hot-toast\";\r\n\r\nexport function usernameValidate(values) {\r\n    const errors = usernameVerify({}, values)\r\n\r\n    return errors;\r\n}\r\n\r\n/**password validation function */\r\nfunction passwordVerify(error = {}, values) {\r\n    const specialCharacter = '~!@#$%^&*()_+{}:\"<>?`/\\|';\r\n\r\n    if (!values.password) {\r\n        error.username = toast.error(\"password required...!\")\r\n    } else if (values.password.includes(\" \")) {\r\n        error.username = toast.error(\"Invalid username...!\")\r\n    } else if (values.password.length < 6) {\r\n        error.username = toast.error(\"Password should be more then 6 characters long...!\")\r\n    } else if (specialCharacter.test(values.password)) {\r\n        error.username = toast.error(\"Password must have special characters...!\")\r\n    }\r\n    return error;\r\n}\r\n\r\n/**username validation function */\r\nfunction usernameVerify(error = {}, values) {\r\n    if (!values.username) {\r\n        error.username = toast.error(\"Username required...!\")\r\n    } else if (values.username.includes(\" \")) {\r\n        error.username = toast.error(\"Invalid username...!\")\r\n    }\r\n    return error;\r\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,SAASC,gBAAgBA,CAACC,MAAM,EAAE;EACrC,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EAEzC,OAAOC,MAAM;AACjB;;AAEA;AACA,SAASE,cAAcA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEJ,MAAM,EAAE;EACxC,MAAMK,gBAAgB,GAAG,0BAA0B;EAEnD,IAAI,CAACL,MAAM,CAACM,QAAQ,EAAE;IAClBF,KAAK,CAACG,QAAQ,GAAGT,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAM,IAAIJ,MAAM,CAACM,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCJ,KAAK,CAACG,QAAQ,GAAGT,KAAK,CAACM,KAAK,CAAC,sBAAsB,CAAC;EACxD,CAAC,MAAM,IAAIJ,MAAM,CAACM,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IACnCL,KAAK,CAACG,QAAQ,GAAGT,KAAK,CAACM,KAAK,CAAC,oDAAoD,CAAC;EACtF,CAAC,MAAM,IAAIC,gBAAgB,CAACK,IAAI,CAACV,MAAM,CAACM,QAAQ,CAAC,EAAE;IAC/CF,KAAK,CAACG,QAAQ,GAAGT,KAAK,CAACM,KAAK,CAAC,2CAA2C,CAAC;EAC7E;EACA,OAAOA,KAAK;AAChB;;AAEA;AACA,SAASF,cAAcA,CAACE,KAAK,GAAG,CAAC,CAAC,EAAEJ,MAAM,EAAE;EACxC,IAAI,CAACA,MAAM,CAACO,QAAQ,EAAE;IAClBH,KAAK,CAACG,QAAQ,GAAGT,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAM,IAAIJ,MAAM,CAACO,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCJ,KAAK,CAACG,QAAQ,GAAGT,KAAK,CAACM,KAAK,CAAC,sBAAsB,CAAC;EACxD;EACA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}